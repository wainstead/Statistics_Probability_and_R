arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
View(arbuthnot)
data(present)
dim(present)
names(present)
range(present$year)
present <- present %>% mutate(total = boys + girls)
present
present <- present %>% mutate(prop_boys = boys / total)
present
ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line() + geom_point()
present <- present %>% mutate(more_boys = boys > girls)
present
View(present)
present <- present %>% mutate(boy_to_girl_ration = boys / girls)
ggplot(data = present, aes(x = year, y = boy_to_girl_ratio)) + geom_line() + geom_point()
ggplot(data = present, aes(x = year, y = boy_to_girl_ration)) + geom_line() + geom_point()
1+1
1+2+3
7-5
8+9-6
4/0
4/3
x <- 2
x
y = 5
y
z <- 3
z
a <- b <- 7
a
b
assign("foo", 4)
foo
rm(foo)
foo
thevar
theVar
theVar
theVar <- 18
theVar
x <- 2
class(x)
is.numeric(x)
is.character(x)
class(4L)
x <- "data"
x
class(x)
nchar(x)
nchar("hello sailor")
nchar(42)
nchar(2)
date1 <- as.Date("2012-02-08")
date1
class(date1)
as.numeric(date1)
date2 <- as.POSIXct("2012-06-23 17:42")
date2
class(date2)
TRUE
FALSE
TRUE and FALSE
is.logical(x)
T
F
2 == 3
x == z
x
y
x <- 5
x == y
42 > 0
"data" > "stats"
x <- c(1,2,3,4,5,6,7,8,9,10)
x
class(x)
x * 3
x + 2
x - 10
x / 4
x^2
sqrt(x)
1:10
10:-10
-5:5
mean(x)
x
x <- 1:10
y <- -5:4
x+y
x*y
x/y
x^y
length(x)
length(y)
x + c(1,2)
x + c(1,2,3)
x <= 5
x > y
y <- -4:5
x <- 10:1
any(x < y)
all(x < y)
q
q
q <- c("hockey", "football", "baseball", "soccer")
q
nchar(q)
# everything is a vector
x
x[1]
x[0]
x[4:6]
c(One="a", Two="y", Last = "r")
w <- 1:3
w
names(w) <- c("a", "b", "c")
w
q2 <- c(q, "Hockey")
q2
q2 <- c(q, "Hockey")
q2 <- c(q, "Hockey")
q2 <- c(q, "Hockey")
q2
q2 <- c(q, "Hockey")
q2
q2Factor <- factor(q2)
q2Factor
q2 <- c(q2, "Hockey")
q2 <- c(q2, "Hockey")
q2 <- c(q2, "Hockey")
q2Factor <- factor(q2)
q2Factor
as.numeric(q2)
as.numeric(q2Factor)
mean(x)
median(x)
sum(x)
nchar(x)
mean(x)
c(2,6)
x
x <- 1:10
mean(x)
mean(x, .1)
x[c(2,6)] <- NA
x
sum(x)
sum(x, na.rm=TRUE)
x <- 1:10
x
x * 2
x
x / 2
y <- -5:5
len(y)
length(y)
y <- -4:5
z <- 21:30
theDF = data.frame(x, y, z)
theDF
theDF
theDF[3, 2:3]
mytinyDF <- theDF[3, 2:3]
mytinyDF
class(mytinyDF)
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
columns(nycflights)
cols(nycflights)
?nycflights
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
ggplot?
;
?ggplot
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram() + ggtitle("Only RDU flights")
?nycflights
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights %<% summarize(n=n())
rdu_flights %>% summarize(n=n())
nycflights %>% summarize(n=n())
nycflights %>% summarize(rtu_dd_median=median())
nycflights %>% summarize(x=median())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(binwidth = 15)
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
names(nycflights)
head(nycflights)
head(nycflights$dep_type)
names(nycflights)
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, fill = distance)) +
geom_scatterplot()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance / air_time)
nycflights %>% select(avg_speed, tailnum) %>% arrange(desc(avg_speed))
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
head(nycflights)
head(nycflights$arr_type)
dim(nycflights)
nycflights %>% summarize(mean_dd = mean(dep_delay))
nycflights %>% summarize(mean_dd = mean(dep_delay), mean(arr_delay))
str(nycflights)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
head(nycflights$arr_type)
head(nycflights$dep_type)
str(nycflights)
nycflights %>% summarize(dep_type_count = sum(dep_type))
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", arr_type == "on time"))
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", arr_type == "on time"), 1, 0)
nycflights %>% summarize(dep_type_pct = ifelse((dep_type == "delayed", arr_type == "on time"), 1, 0))
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", 1, 0))
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", 1, 0) / n())
names(nycflights)
nycflights %>% ifelse(arr_type == "on time", 1, 0)
nycflights %>% ifelse(arr_type == "on time", 1, 0)
nycflights %>% ifelse(arr_type == "on time", "yes", "no")
nycflights %>% ifelse(arr_type == "on time", "yes", "no")
xx = c(1:10)
xx
sqrt(xx)
sqrt(ifelse(xx % 2, NA))
sqrt(ifelse(xx % 2, xx, NA))
sqrt(ifelse(xx > 2, xx, NA))
sqrt(ifelse(xx % 2 == 0, xx, NA))
sqrt(ifelse((xx % 2 == 0), xx, NA))
sqrt(ifelse( (xx % 2 == 0), xx, NA) )
sqrt(ifelse(xx > 2, xx, NA))
nycflights %>% filter(dep_type == "delayed")
nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time")
dim(nycflights)
dim(nycflights)[1]
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[0]
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[1]
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[1] / dim(nycflights)[1]
dim(nycflights %>% filter(dep_type == "delayed")
)
1767 / 10351
10 % 2
10 %% 2
sqrt(ifelse( (xx %% 2 == 0), xx, NA) )
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", ifelse(arr_type == "on time", 1, 0), 0)
)
qq = c(1:7)
qq
sum(qq)
mean(qq)
median(qq)
qq = c(1:7)
append(qq, 100)
mean(qq)
median(qq)
qq = append(qq, 100)
qq
mean(qq)
median(qq)
yy = append(1000, qq)
yy
mean(yy)
median(yy)
mean(yy) / median(yy)
yy
mean(qq) / median(qq)
qq
yy
qq
mean(qq) / median(qq)
yy
mean(yy) / median(yy)
rightskew = c(1,1,2,2,3,3,4,75,100.125)
mean(rightskew) / median(rightskew)
leftskew = c(1,2,3,100,101,102,103)
mean(leftskew) / median(leftskew)
khan <- c(18,16,15,15,16)
khan
st(khan)
sd(khan)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
arbuthnot
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$years
arbuthnot$year
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
?ggplot
qq
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_line()
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_bar()
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_point()
?ggplot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
data(arbuthnot)
arbuthnot
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
names(artubhnot)
names(arbuthnot)
dim(arbuthnot)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
names(arbuthnot)
arbuthnot <- arbuthnot %>% mutate(more_boys = boys > girls)
names(arbuthnot)
data(present)
dim(present)
names(present)
range(present$year)
range(present$girls)
median(present$girls)
mode(present$girls)
present <- present %>% mutate(total = boys + girls)
present%boys / present%total
present <- present %>% mutate(prop_boys = boys / total)
present$prop_boys
ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line()
present <- present %>% mutate(more_boys = boys > girls)
ggplot(data = present, aes(x = year, y = more_boys)) + geom_line()
present$more_boys
present$total
present$prop_boys
# type your code for Question 7 here, and Knit
present <- present %>% mutate(prop_boys = boys / total)
# type your code for Question 5 here, and Knit
present <- present %>% mutate(total = boys + girls)
# type your code for Question 6 here, and Knit
present <- present %>% mutate(more_boys = boys > girls)
# type your code for Question 4 here, and Knit
names(present)
# type your code for Question 5 here, and Knit
present <- present %>% mutate(total = boys + girls)
ggplot(data = present, aes(x = year, y = prop_boys)) + geom_line()
# type your code for Question 6 here, and Knit
present <- present %>% mutate(more_boys = boys > girls)
present$more_boys
# type your code for Question 7 here, and Knit
present <- present %>% mutate(prop_boy_girl = boys / girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl))
# type your code for Question 7 here, and Knit
present <- present %>% mutate(prop_boy_girl = boys / girls)
present$prop_boy_girl
ggplot(data = present, aes(x = year, y = prop_boy_girl))
# type your code for Question 7 here, and Knit
present <- present %>% mutate(prop_boy_girl = boys / girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_point()
# type your code for Question 7 here, and Knit
present <- present %>% mutate(prop_boy_girl = boys / girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl)) + geom_line()
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
present %>% mutate(total = boys + girls) %>%  arrange(desc(total))
names(present)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
str(nycflights)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram() + ggtitle("Only RDU flights")
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
sfo_feb_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 1 here, and Knit
sfo_feb_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), sample_size = n())
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(binwidth = 15)
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median_ad = median(arr_delay), sd_iqr = sd(arr_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median_ad = median(arr_delay), iqr_ad = IQR(arr_delay), n = n())
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
factor?
;
?factor
ls.str(nycflights)
str(nycflights)
?str
?ls.str
levels(carrier)
levels(nycflights$carrier)
?levels
levels(factor(nycflights$carrier)
)
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 7 here, and Knit
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
summarise(nycflights$origin)
levels(factor(nycflights$origin)
)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance / air_time)
nycflights %>% select(avg_speed, tailnum) %>% arrange(desc(avg_speed))
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
names(nycflights)
min(nycflights$dep_delay)
min(nycflights$arr_delay)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
head(nycflights$arr_type)
head(nycflights$dep_type)
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[1] / dim(nycflights %>% filter(dep_type == "delayed"))
nycflights %>% summarize(dep_type_pct = ifelse(dep_type == "delayed", ifelse(arr_type == "on time", 1, 0), 0)
)
nycflights %>% filter(arr_type == "on time")
arr_flights <- nycflights %>% filter(arr_type == "on time")
ggplot(data = arr_flights, aes(x = arr_delay, fill = dep_delay)) + geom_bar()
ggplot(data = arr_flights, aes(x = arr_type, fill = dep_type)) + geom_bar()
dim(nycflights)
names(arr_type)
dim(nycflights %>% filter(dep_type == "delayed"))
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[1]
dim(nycflights %>% filter(dep_type == "delayed"))
dim(nycflights %>% filter(dep_type == "delayed") %>% filter(arr_type == "on time"))[1] / dim(nycflights %>% filter(dep_type == "delayed"))[1]
